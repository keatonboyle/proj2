Compliation:
make

Run Sender:
./sender portno cwnd lp lc

Run Receiver:
./receiver host portno filename lp lc

(lp and lc are optional for both, by default they're zero)

Receiver will make a directory called "output" in the current directory.
Sender will send the file, whose path is the current directory, in packets to the receiver.
Receiver will re-assemble the file in the output directory under the same name.

Implementation Notes:

11/29/13 12:00p Basic server, runs on UDP, can respond to a client's message (a file name) by echoing back.

11/30/13 4:00p  We're moving. Timeout works, now we just need to add FIN's back in and make sure every packet reaches the destination. Then time to implement GBN or selective repeat.

12/1/13 12:30a Things are going well. Timeouts are smoother, with timeouts added to teh receiver side for requests. Packet Fragmentation to fit CWND is now included, with a new parameter added to the header: offset, which makes reads and writes super easy!
